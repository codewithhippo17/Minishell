graph TD
    subgraph "Minishell Process"
        direction LR

        subgraph "SIGNALS SYSTEM"
            direction TB
            A[Shell Start] --> B["Setup Signal Handlers"];
            B --> C["Main REPL Loop"];
        end

        subgraph "MAIN LOOP"
            direction TB
            C --> D[Readline];
            D --> E{"Check Signal Flag (g_received_signal)"};
            E -- "Flag is Set" --> F["React to Signal"];
            F --> G["1. Print Newline"];
            G --> H["2. collector_cleanup(TEMP/SESSION)"];
            H --> I["3. Reset g_received_signal"];
            I --> C;

            E -- "Flag is Not Set" --> J["Parse Input"];
            J --> K["Execute Command"];
            K --> L["collector_cleanup(SESSION)"];
            L --> C;
        end

        subgraph "COLLECTOR SYSTEM"
            direction TB
            M["collector_register(ptr)"] --> N["Collector Internals<br/>(Static list of allocations)"];
            N --> O["<b>GLOBAL Scope</b><br/>(env, config)<br/><i>Cleanup on exit</i>"];
            N --> P["<b>SESSION Scope</b><br/>(AST, cmd args)<br/><i>Cleanup after command</i>"];
            N --> Q["<b>TEMP Scope</b><br/>(lexer/expander tokens)<br/><i>Cleanup after parsing</i>"];
        end
    end

    %% --- Interactions ---

    subgraph "External Signal Handling"
        SignalHandler["OS Signal (e.g., SIGINT)"] -- "triggers handler" --> SetsFlag["Signal Handler Logic"];
        SetsFlag -- "Only sets global flag" --> GlobalFlag([g_received_signal]);
    end

    %% Dotted lines show interactions between subsystems
    GlobalFlag -.-> E;
    H -. "cleans" .-> P;
    H -. "cleans" .-> Q;
    L -. "cleans" .-> P;

    %% --- Styling ---
    classDef signals fill:#ffe4e1,stroke:#c0392b,stroke-width:2px;
    classDef collector fill:#eaf2f8,stroke:#2980b9,stroke-width:2px;
    classDef mainloop fill:#e8f8f5,stroke:#1e8449,stroke-width:2px;

    class A,B,SignalHandler,SetsFlag,GlobalFlag signals;
    class M,N,O,P,Q,H,L collector;
    class C,D,E,F,G,I,J,K mainloop;